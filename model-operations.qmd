---
title: "Model operations"
---


<!-- ##  Exploit evops app model pipelines -->





##  Statistical Learning Analysis (sla) pipeline: *Mandatory*


:::{.callout-note}
Rerunning this pipeline with eventually modified input arguments on the same dataset of a given experimentation will overwrite all results generated during the previous run.
:::




The notebook associated with **sla_pipeline** is the file **sla_pipeline.ipynb**.
The main objective of this pipeline is to estimate the parameters of (**stationary** and **non stationary**) arithmetic mixture of gev models 
based on train datasets and to exploit the fitted model to predict return levels associated with given return period conditional on test predictor variables. Here, the train and test datasets must be those generated by **itl_pipeline**. 

To run **sla_pipeline**, the studied response variable name must be assigned to the input argument **response_var**. In addition, the folder names containing **raw** train and test datasets must be assigned to the input arguments **experimentation_train_dir** and **experimentation_test_dir**. These three input arguments must match those used in **itl_pipeline** to create the considered train and test datasets. 


All numerical and graphical outputs are displayed in the notebook. Some numerical outputs are stored in the sub folder **processed_data** of the directory whose name is assigned to the variable **experimentation_train_dir**.  In the directory **processed_data**, the sub folder whose name is the value assigned to the input argument **response_var** includes the csv files conventionally named as follows.

* **experimentation_train_dir+response_var+stationary_model_estimates.csv**: It is the file which contains the estimated parameters of the **stationary** arithmetic gev mixture model fitted using only the train response variable. 

* **experimentation_train_dir+response_var+non_stationary_model_estimates.csv**: It is the file which contains the estimated parameters of the **non stationary** arithmetic gev mixture model fitted using both the train response variable and train predictor variables. 

* **experimentation_train_dir+response_var+sample.csv**: It is the file which contains a sample of the response variable generated using the fitted **stationary** arithmetic gev mixture model. The sample size can be modified as per needs. Its default value is equal to the number of observations in the train datasets.

* **experimentation_train_dir+response_var+importance.csv**: It is the file which contains the **contribution** or **importance** of the predictor variables on the expected exceedance above the maximum value of the train response variable.

* **experimentation_train_dir+experimentation_test_dir+response_var+return_periods.csv**: It is the file which contains return periods of observations in the test response variable conditional on their respective test predictor variables.

* **experimentation_train_dir+experimentation_test_dir+response_var+return_levels.csv**: It is the file which contains return levels of the response variable conditional on the observed test predictor variables. The common return period associated with these return levels can be modified as per needs. Its default value is equal to the number of observations in the train datasets.




```{mermaid}
flowchart LR
  I[Input] --> A(experimentation_train_dir)
  I[Input] --> B(experimentation_test_dir)
  I[Input] --> C(response_var)
  A --> D{sla_pipeline}
  B --> D
  C --> D
  D --> O[output]
  O --> E(experimentation_train_dir)
  E --> F(processed_data)
  F --> G(response_var)
  G --> G5(experimentation_train_dir+response_var+stationary_model_estimates.csv)
  G --> G6(experimentation_train_dir+response_var+non_stationary_model_estimates.csv)
  G --> G3(experimentation_train_dir+response_var+sample.csv)
  G --> G4(experimentation_train_dir+response_var+importance.csv)
  G --> G7(experimentation_train_dir+experimentation_test_dir+response_var+return_periods.csv)
  G --> G8(experimentation_train_dir+experimentation_test_dir+response_var+return_levels.csv)
```



```{mermaid}
flowchart LR
  I[Input] --> A(experimentation_train_dir)
  I[Input] --> B(experimentation_test_dir)
  I[Input] --> C(response_var)
  A --> D{sla_pipeline}
  B --> D
  C --> D
  D --> O[output]
```


```{mermaid}
flowchart LR
  O[output] --> E(experimentation_train_dir)
  E --> F(processed_data)
  F --> G(response_var)
  G --> G5(experimentation_train_dir+response_var+stationary_model_estimates.csv)
  G --> G6(experimentation_train_dir+response_var+non_stationary_model_estimates.csv)
  G --> G3(experimentation_train_dir+response_var+sample.csv)
  G --> G4(experimentation_train_dir+response_var+importance.csv)
  G --> G7(experimentation_train_dir+experimentation_test_dir+response_var+return_periods.csv)
  G --> G8(experimentation_train_dir+experimentation_test_dir+response_var+return_levels.csv)
```



##  Extreme Value Analysis (eva) pipeline: *Independent*


There are currently four notebooks associated with **eva_pipeline**, namely **eva_pipeline_normal.ipynb**, **eva_pipeline_gamma.ipynb**, **eva_pipeline_gev.ipynb** and **eva_pipeline.ipynb**.  The first three notebooks are intended to test **eva_pipeline** on simulated data (see @sec-evasimuateddata for more details) whereas the last notebook is intended to apply **eva_pipeline** on custom data (see @sec-evarealdata for more details).





###  Illustration on simulated datasets {#sec-evasimuateddata}


:::{.callout-note}
Rerunning the pipelines of this section with modified input arguments will overwrite all results generated during the previous run.
:::




####  Normal Distribution


The notebook associated with **eva_pipeline** for data from a normal distribution is the file **eva_pipeline_normal.ipynb**. The main objective of this pipeline is to estimate the parameters of **stationary** geometric mixture of gev models based on simulated data from a normal probability distribution and to exploit the fitted model to predict return levels and expected exceedances associated with given return periods.
In addition, the true return levels of the underlying normal law are provided for comparison.


The **eva_pipeline** for normal distribution requires three main information as input. The first is the number of normal data to simulate. This number must be assigned to the input argument **n**. The second and third are the mean and standard deviation parameters of the normal law to use. These two quantities must be assigned to the input arguments **mean** and **sd**, respectively.


All numerical and graphical outputs are displayed in the notebook. Some numerical outputs are stored in the **normal_distribution_results** directory as csv files conventionally named as follows.


* **sample_normal_data.csv**: It is the file which contains the simulated normal data using the provided input arguments. 


* **gev_mixture_model_estimates.csv**: It is the file which contains the estimated parameters of the **stationary** geometric gev mixture model fitted using the simulated normal data.


* **return_levels.csv**: It is the file which contains estimated and true return levels of the normal law. The return periods associated with these return levels range from the number of observations in the simulated normal data to one million times that number. The used default values of return periods can be modified as per needs. 


* **expected_exceedance.csv**: It is the file which contains the estimated expected exceedances of a given threshold related to the input normal law for all gev models in the fitted geometric gev mixture model. The default value of that threshold is the maximum value of the simulated normal data. This value can be modified as per needs.




```{mermaid}
flowchart LR
  I[Input] --> A(n)
  I[Input] --> B(mean)
  I[Input] --> C(sd)
  A --> D{eva_pipeline}
  B --> D
  C --> D
  D --> O[output]
  O --> E(normal_distribution_results)
  E --> E1(sample_normal_data.csv)
  E --> E2(gev_mixture_model_estimates.csv)
  E --> E3(return_levels.csv)
  E --> E4(expected_exceedance.csv)
```


####  Gamma Distribution




The notebook associated with **eva_pipeline** for data from a gamma distribution is the file **eva_pipeline_gamma.ipynb**. The main objective of this pipeline is to estimate the parameters of **stationary** geometric mixture of gev models based on simulated data from a gamma probability distribution and to exploit the fitted model to predict return levels and expected exceedances associated with given return periods.
In addition, the true return levels of the underlying gamma law are provided for comparison.


The **eva_pipeline** for gamma distribution requires three main information as input. The first is the number of gamma data to simulate. This number must be assigned to the input argument **n**. The second and third are the shape and scale parameters of the gamma law to use. These two quantities must be assigned to the input arguments **shape** and **scale**, respectively.


All numerical and graphical outputs are displayed in the notebook. Some numerical outputs are stored in the **gamma_distribution_results** directory as csv files conventionally named as follows.


* **sample_gamma_data.csv**: It is the file which contains the simulated gamma data using the provided input arguments. 


* **gev_mixture_model_estimates.csv**: It is the file which contains the estimated parameters of the **stationary** geometric gev mixture model fitted using the simulated gamma data.


* **return_levels.csv**: It is the file which contains estimated and true return levels of the gamma law. The return periods associated with these return levels range from the number of observations in the simulated gamma data to one million times that number. The used default values of return periods can be modified as per needs. 


* **expected_exceedance.csv**: It is the file which contains the estimated expected exceedances of a given threshold related to the input gamma law for all gev models in the fitted geometric gev mixture model. The default value of that threshold is the maximum value of the simulated gamma data. This value can be modified as per needs.





```{mermaid}
flowchart LR
  I[Input] --> A(n)
  I[Input] --> B(shape)
  I[Input] --> C(scale)
  A --> D{eva_pipeline}
  B --> D
  C --> D
  D --> O[output]
  O --> E(gamma_distribution_results)
  E --> E1(sample_gamma_data.csv)
  E --> E2(gev_mixture_model_estimates.csv)
  E --> E3(return_levels.csv)
  E --> E4(expected_exceedance.csv)
```



####  GEV Distribution


The notebook associated with **eva_pipeline** for data from a gev distribution is the file **eva_pipeline_gev.ipynb**. The main objective of this pipeline is to estimate the parameters of **stationary** geometric mixture of gev models based on simulated data from a gev probability distribution and to exploit the fitted model to predict return levels and expected exceedances associated with given return periods.
In addition, the true return levels of the underlying gev law are provided for comparison.


The **eva_pipeline** for gev distribution requires four main information as input. The first is the number of gev data to simulate. This number must be assigned to the input argument **n**. The second, third and fourth are the shape, scale and location parameters of the gev law to use. These three quantities must be assigned to the input arguments **shape**, **scale** and **loc**, respectively.


All numerical and graphical outputs are displayed in the notebook. Some numerical outputs are stored in the **gev_distribution_results** directory as csv files conventionally named as follows.


* **sample_gev_data.csv**: It is the file which contains the simulated gev data using the provided input arguments. 


* **gev_mixture_model_estimates.csv**: It is the file which contains the estimated parameters of the **stationary** geometric gev mixture model fitted using the simulated gev data.


* **return_levels.csv**: It is the file which contains estimated and true return levels of the gev law. The return periods associated with these return levels range from the number of observations in the simulated gev data to one million times that number. The used default values of return periods can be modified as per needs. 


* **expected_exceedance.csv**: It is the file which contains the estimated expected exceedances of a given threshold related to the input gev law for all gev models in the fitted geometric gev mixture model. The default value of that threshold is the maximum value of the simulated gev data. This value can be modified as per needs.





```{mermaid}
flowchart LR
  I[Input] --> A(n)
  I[Input] --> B1(shape)
  I[Input] --> B2(scale)
  I[Input] --> B3(loc)
  A --> D{eva_pipeline}
  B1 --> D
  B2 --> D
  B3 --> D
  D --> O[output]
  O --> E(gev_distribution_results)
  E --> E1(sample_gev_data.csv)
  E --> E2(gev_mixture_model_estimates.csv)
  E --> E3(return_levels.csv)
  E --> E4(expected_exceedance.csv)
```



###  Application on real dataset {#sec-evarealdata}


:::{.callout-note}
Rerunning this pipeline with modified input arguments on a given uploaded dataset will overwrite all results generated during the previous run.
:::


The notebook associated with **eva_pipeline** is the file **eva_pipeline.ipynb**. The main objective of this pipeline is to estimate the parameters of (**stationary**) geometric mixture of gev models based on train data and to exploit the fitted model to predict return levels and expected exceedances associated with given return periods. 

The **eva_pipeline** requires two main information as input. The former is the csv file whose name is assigned to the input argument **csv_file_name**. This csv file must be uploaded in the **workspace** directory of the container running the evops app. The latter concerns the column name of the variable to consider in the file referenced by the argument **csv_file_name**. This column name must be assigned to the input argument **variable_name**.


All numerical and graphical outputs are displayed in the notebook. Some numerical outputs are stored in the **workspace** directory of the container running the evops app as csv files conventionally named as follows.

* **csv_file_name+variable_name+gev_mixture_model_estimates.csv**: It is the file which contains the estimated parameters of the **stationary** geometric gev mixture model fitted using the specified train data.


* **csv_file_name+variable_name+return_levels.csv**: It is the file which contains return levels of the fitted variable. The return periods associated with these return levels range from the number of observations in the train data to one million times that number. The used default values of return periods can be modified as per needs. 


* **csv_file_name+variable_name+expected_exceedance.csv**: It is the file which contains the expected exceedances of a given threshold related to the fitted variable for all gev models in the fitted geometric gev mixture model. The default value of that threshold is the maximum value of the train data. This value can be modified as per needs.







```{mermaid}
flowchart LR
  I[Input] --> A(csv_file_name)
  I[Input] --> B(variable_name)
  A --> C{eva_pipeline}
  B --> C
  C --> O[output]
  O --> D(workspace)
  D --> D1(csv_file_name+variable_name+gev_mixture_model_estimates.csv)
  D --> D2(csv_file_name+variable_name+return_levels.csv)
  D --> D3(csv_file_name+variable_name+expected_exceedance.csv)
```
